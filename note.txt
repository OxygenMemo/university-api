npm install --save express
npm install --save body-parser // use /student/:id call with res.params.id

const express = require('express')// ได้ function มา 
const bodyParser = require('body-parser')
const app = express() // ถ้าจะให้ function ที่เอามา ต้องใส่ วงเล็บตามหลัง()

app.use(bodyParser.urlencoded({ extended : false }))
app.use(bodyParser.json())

ข้อมูล Api เวลาเรียกข้อมูลต้องถูกต้องครบถ้วน

การครบถ้วนต้อง มี id name email เรียกว่า โครงสร้างข้อมูลที่ถูกต้อง

design by contack เวลาเราจะใช้ของๆ ใครเราต้องรู้ spect 
แต่การที่เราจะรู้อะไรต้องออกแบบของก่อน เรียกใช้ spect เราต้อง
กำหนดข้อตกลงว่า เรียกแบบนี้จะได้แบบนี้ เราเรียกต้องได้ข้อมูลที่ถูกต้องตามที่ตกลง
เราต้อง มี Design by contack ได้ ต่างคนก็ต่าง test โปรแกรมตัวเองได้

ถ้าเรามอง ใน มุม ของ functionnal nonfunctional 
เราจะควบคุมไม่ได้เลยคือ ข้อมูล ควบคุมไม่ได้ ก็ testไม่ได้ จะไม่เหมือน mock เราควบคุม result ได้

เราก็ต้องเช็คโครสร้างแทน เช่น ถ้ามันต้อง return เป็น list แม้ DB จะไม่มีข้อมูล เราก็ ต้อง return เป็น list เป็นต้น
หรือ ถ้า เลขบัตร ประชาชน มี 13 หลักเสมอ ต้องเช็คความยาว 
หรือ เราอาจจะต้องเช็คว่า ฟิลที่มัน require มันมีข้อมูลใหม
หรือ เราต้องการใช้ fullname แต่ API ส่ง fname มาแทนหรือป่าว

แต่การที่ข้อมูลผิดพลาด getstudent ได้ ชื่อหมามา เราไม่ได้ผิด มันผิดที่ข้อมูล

สรุป เราไม่สามารถ เอาความรู้ ในการ Unit Test ทั้งหมดมาใช้เวลาทำงานจริงได้

ใน 3เหลี่ยมการ Test unit test จะเยอะสุด แต่เร็วสุดเพราะ มันเขียนเสร็จ service ก็ mock ได้เลย

intigation test เราจะควบคุมไม่ได้แล้ว เพราะ เราต้อง ต่อ service คนอื่น เราควบคุมไม่ได้ จะช้า แต่ เขียนน้องลง บางทีก็ช้าเป็นวัน กว่าจะรู้ว่า
software เราใช้ไม่ได้ก็สายไปแล้ว เราก็ควร test เท่าที่จำเป็น ไม่ควรวุ่นเวอ มาก เพราะบางอย่างมันก็ testไม่ได้ 

//---------------
database มีหลายประเภท 
-reational แต่ละตารางมีความ สัมพันกัน
-dockument base database คือ database ที่ก็ข้อมูลที่ไม่แน่นอน qusetiona เก็บคำถาม หลายๆอัน 
โดยมันไม่ซ้ำกันเลยจำนวนข้อก็ไม่ซ้ำ เราก็ มองว่า มัน เป็นกระดาษแผ่นเดียวซะสิ เป็นกระดาษที่เก็บคำถามจบ
1
2 มีความน่าเชื่อถือของข้อมูลสูงกว่า

ตัวแปร ที่เก็บตัวแปร เป็นอาเร มันก็ ถือว่าเป็น datastore แต่อาจะมีคุณสมบัตรไม่เท่า database 

spacific คือ เราจะทดสอบอะไรบ้าง

resfull 
มองทุกอย่างเป็น result 
แล้วเราก็กำหนด permistion ว่าเราทำอะไรกับ ข้อมูลได้บ้าง

การ test express ถ้าใช้ jest มันมีข้อจำกัด อาจจะต้องเปรี่ยนตัว
npm install --save-dev tape supertest
node js ควรเป็น version 8 แรงมาก

วิธี run test node test/ชื่อไฟร์ที่จะtest

supertest จะจำลองการที่เราไปเรียก api จำลองตัวเองว่าไปเรียกเว็ป (จำลองว่าเหมือนเราไปเปิด เบาเซอร์เปิดเว็ปดูว่างั้น)
คล้ายๆ postman จำลอง การสร้าง request

อาติหน้า ทำ UI automate test

การทดสอบ api มีรูปแบบคือ
make Request ส
่งผ่าน http 
response รอผลลัพกลับมา 

แน่นอน

http:// =protocal

localhost:8080 = domain

/students = result

ทุกครั้งที่เรียก request ไว้จะมี status กลับมา
https://en.wikipedia.org/wiki/List_of_HTTP_status_codes

HTTP Status code 
200 ok คือ เปิดมาแล้วตอบเราได้
ที่มันโชว์เลขได้ คือ มันติดต่อไปที่ server แล้ว server รับ request กลับมา
404 คือ server ไม่รู้จัก path นั้น 
ถ้าโคทพังจะ return 500 กลับมา
ถ้าไม่ login จะ 401

ถ้าเราไม่มี package node js หรือ ./node_module
เรา ต้อง พิม npm install เข้าไป เพื่อ ให้มันไปโหลด ไฟร์จาก package.json มา ให้เลยในเครื่อง
เราจึงไม่ควรอัพ ./node.js ขึ้นไป

คนเขียน API ต้อง เขียนการ return status code ด้วย เพราะว่า คนเขียนโปรแกรม จะเชื่อว่า 200 คือ request ได้
ถ้า error เค้าจะได้ ไปเช็คได้เลย

การเขียน API ควร
เช็ค status เป็นไปตามที่เราคาดหวังใหม